*************************************
***                               ***
*** Haskell Pdf Presenter (HPDFP) ***
***                               ***
*************************************

This application is a viewer for PDF based presentations such as those
generated by Beamer.  Unlike standard PDF viewers it has features
specifically for presentations such as a visual clock/timer and a
preview showing the next slide to the person delivering the talk.

For basic use of the program, simply pass the path to the PDF as an
argument as in the following:

  ./hpdfp [filename]

For help with the command line use the "--help" flag.

For help with the GUI press the "?" key when the program is running.

There are a lot of features that may not be immediately obvious so
please be sure to look at those bits of documentation.

***********
WARNING: This application intentionally disables both the screen saver
and automatic screen dimming.  This is to avoid having the screen saver
start in the middle of your presentation.
***********

======================
Features (Implemented)
======================

- Presenter view
  - Metadata:
    - Fonts are big (60pt = 5 * 12pt)
    - Resizeable
    - Timer:
      - Grows to fit size (usefull for session chairs)
      - Colors: white, red (warning), purple (overtime)
          Yeah, these colors are a bit strange, but I've chosen them to
          be easily distinguishable even in peripheral vision or at a
          glance.  I don't know how well they work for color-blind
          people.  Feedback is welcome.
      - Double click to configure timer
        - Current remaining time
        - Initial time
        - Warning time
    - Slide counter
      - Double click to go to slide
    - Mute status
    - Timer status
      - Multiple modes: Count down, count up, wall clock (12 or 24 hr)
      - When paused (but not stopped) automatically goes to running if user
        goes forward or backward one slide.  Changing slide in other ways does not unpause.
      - NOTE: to start timer but stay on first slide, just hit the back key
    - Progress bar when doing rendering in the background
  - Preview
  - Thumbnails
    - Current slide highlighted
    - Tooltips show slide number (Currently disabled due to a bug in GTK)
    - Click to go to slide
    - Mouse wheel scrolls instead of changes slide

- Audience view
  - Mouse hides after ~3 seconds
  - Shows on top if there is only one screen

- Rendering
  - Slides are pre-rendered in the background
  - Pre-rendered slides are compressed to memory usage is low
      (e.g., my disseration defense with 95 slides takes only 55MB at max resolution)
  - slide number or file name until rendered
  - Renders slide close to current slide first (at a rate of two forward per one backward)
  - Cache is filtered and wiped cleanly

- Keybindings:
  (Note that the keys are far appart on a Qwerty keyboard and irreversible
  actions (e.g., resetting the timer) all use a modifier key.)

  - Switching slides:
    - Forward slide and unpause (shift moves by 10): space, page down, enter, right arrow, down arrow
    - Backward slide and unpause (shift moves by 10): back space, page up, left arrow, up arrow
    - First slide: home
    - Last slide: end
    - Goto slide number: Ctrl-g, double click enty box (direct edit of entry box is buggy)
    - History back: Alt-L, XF86Back
    - History forward: Alt-R, XF86Forward
  - Clock/timer control:
    - Toggle pause: p, pause
    - Reset timer: c
    - Open timer dialog: Ctrl-c
  - Mute:
    - Toggle white: w
    - Toggle black: b
  - Presenter screen:
    - Switch views: tab
    - Change preview percentage: [, ], Shift-[ (minor), Shift-] (minor), = (standard stops)
      - Standard stops: 0, best left, 1/3, 1/2, 2/3, best right, 1
    - Change preview percentage to standard
  - Files:
    - Reload file: Ctrl-r
    - Open file: Ctrl-o
  - Quit: Alt-F4, Ctrl-q
  - Enter fullscreen: f, F11, Alt-Enter, Control-l
  - Exit fullscreen: Escape, f, F11, Alt-Enter, Control-l
  - Help/About dialog: h, ?

- Command line:
  - Zero or one files as argument:
    - NOTE: Zero files is useful for creating a simple timer with no slides
  - Initial time: --durations
  - Warning time: --warning
  - Initial slide: --initial-slide
  - Initial mute: --mute-black, --mute-white, --mute-off
  - Start in fullscreen: --fullscreen, -f
  - Help: --help, -h, -?
  - Compression level: --compress

- Since poppler is not thread safe (see https://bugs.freedesktop.org/show_bug.cgi?id=50992),
  we avoid using a separate thread for rendering, but it is still done incrementally
  so the GUI is still responsive.

- Disables screen saver when running in fullscreen mode
  - WARNING: This is done by programatically giggling the mouse by zero pixels (even when running in the background).
    This may lead to other programs thinking the mouse is constantly moving
    (e.g. a video player may not dim the background or hide the mouse).
    I haven't found any programs where this is an actual problem, but it is a possibility.

================
Inspired by
================

* pdfpc: http://davvil.github.com/pdfpc/

* pdf-presenter-console: http://westhoffswelt.de/projects/pdf_presenter_console.html

* pympress: http://pympress.org/

================
Known Bugs
================

If you
  (1) are in full screen mode,
  (2) are displaying to two monitors,
  (3) have the presenter toggled to show thumbnails, and
  (4) hover the mouse over the vertical scroll bar,
then the rendering will glitch and show older versions of the screen.
I don't know why this happens, but I'm guessing it is a bug in GTK.
A similar bug happens if you put tooltips on the thumbnails (which
are currently disabled to avoid that bug).  Any help in solving
this bug would be appreciated.
